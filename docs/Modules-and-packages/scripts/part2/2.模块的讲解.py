
# 1.将具有共性的功能放在一个py文件中，这样的文件就可以称之为模块

# 2.将封装好的模块对外提供功能

# 3.在要使用模块功能的地方进行导入 => 使用功能

# 在要使用模块功能的文件中用import关键词导入模块

# 语法：import 模块名

import m1  # m1名字就是模块m1的文件对象，存放的是m1文件的地址
# import导入模块完成的事情：
# 1.将被导入的模块编译成模块名对应的pyc文件
# 2.从上至下执行被调用模块的所有代码，形成模块的名称空间，将模块中产生的所有名字存放在模块的名称空间中
#       -- t1,t2,t3存放在m1模块的名称空间中
# 3.在要使用模块的文件(当前文件)的名称空间中产生一个与模块名同名的名字指向模块的名称空间
# print(m1)

# 问题：存在几个全局名称空间 - 当前的执行文件 | 被导入的模块文件

def t1():
    print('当前名称空间的t1功能')

# 直接使用名字就是当前名称空间的名字
# print(m1)
# print(t1)
t1()

# 通过 模块名.模块中的名字 来使用模块中的名字
# print(m1.t1)
m1.t1()


price = 16000  # ①
m1.t1()
print(price)  # 访问①当前文件的全局名称空间中的price


